<i18n:domain i18n:domain="collective.contact.widget"
             xmlns:tal="http://xml.zope.org/namespaces/tal"
             xmlns:metal="http://xml.zope.org/namespaces/metal"
             xmlns:i18n="http://xml.zope.org/namespaces/i18n">
<script type="text/javascript">
var ccw = {};
$(document).ready(function() {
  $(document).bind('formOverlayLoadSuccess', function(e, req, myform, api, pb, ajax_parent) {
    ajax_parent.find('div').slice(0, 1).prepend(ajax_parent.find('.portalMessage').detach());
  });
  $(document).bind('loadInsideOverlay', function(e, el, responseText, errorText, api) {
    var el = $(el);
    var o = el.closest('.overlay-ajax');
    var pbo = o.data('pbo');
    var overlay_counter = parseInt(pbo.nt.substring(3, pbo.nt.length));
    o.css({zIndex: 9998+overlay_counter});
  });
  ccw.get_contact_infos = function(el){
      /*Get path, title and url of contact from contact page
      */
      objpath_input = el.find('input[name=objpath]');
      if (objpath_input.length) {
          return objpath_input.val().split('|');
      }
      else{
          return null;
      }
  }
  ccw.fill_autocomplete = function (el, pbo, noform) {
    var data = ccw.get_contact_infos(el);
    if (data !== null) {
        var input_box = pbo.source.parents('div.field').find('.querySelectSearch input');
        formwidget_autocomplete_new_value(input_box, data[0], data[1]);
        input_box.flushCache();
        // trigger change event on newly added input element
        var input = input_box.parents('.querySelectSearch').parent('div').siblings('.autocompleteInputWidget').find('input').last();
        var url = data[3];
        ccw.add_contact_preview(input, url);
        input.trigger('change');
    }
    return noform;
  };
  var pendingCall = {timeStamp: null, procID: null};
  ccw.add_contact_preview = function (input, url) {
    if (url) {
        input.siblings('.label')
            .wrapInner('<a href="'+url+'" target="_new" class="link-tooltip">');
    }
  };

  $(document).on('mouseleave', '.link-tooltip', function() {
    if (pendingCall.procID) {
      clearTimeout(pendingCall.procID);
      pendingCall.procID = null;
    }
  });
  $(document).on('mouseenter', '.link-tooltip', function() {
    var trigger = $(this);
    // don't open tooltip in tooltip
    if (trigger.closest('.tooltip').length) {
        return;
    }
    if (!trigger.data('tooltip')) {
      if (pendingCall.procID) {
        clearTimeout(pendingCall.procID);
      }
      var timeStamp = new Date();
      var tooltipCall = function() {
          var tip = $('<div class="tooltip pb-ajax" style="display:none">%(wait_msg)s</div>')
                .insertAfter(trigger);
          trigger.tooltip({relative: true, position: "center right"});
          var tooltip = trigger.tooltip();
          tooltip.show();
          var url = trigger.attr('href');
          $.get(url, {ajax_load: new Date().getTime()}, function(data) {
            tooltip.hide();
            tooltip.getTip().html($('<div />').append(
                    data.replace(/<script(.|\s)*?\/script>/gi, ""))
                .find(common_content_filter));
            if (pendingCall.timeStamp == timeStamp) {
                tooltip.show();
            }
            pendingCall.procID = null;
          });
      }
      pendingCall = {timeStamp: timeStamp,
                     procID: setTimeout(tooltipCall, 500)};
    }
  });
});
</script>
<style type="text/css">
.tooltip {
  overflow: hidden;
}
.tooltip, #calroot {
  z-index: 99999;
}
</style>
</i18n:domain>
